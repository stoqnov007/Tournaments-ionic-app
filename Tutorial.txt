This Ionic 2 application works with the following:
1. Ionic 2 starter from TournamentsApp-with-ionic2: https://github.com/agnimitradas/TournamentsApp-with-ionic2
2. Additional Node.js application for back-end to handle the following: 
   - Local database MongoDb with collections: "tournaments", "teams", "users" ...
   OR
   - Database in mLab with the same collections - https://mlab.com

   - User authentication (role based) with passport - local strategy + JWT(JSON Web Tokens) - register and login user
   - CRUD operations with Node.js, MongoDb and Mongoose API
 

1. Tournaments
2. Teams
3. Favourite teams
4. Games
5. Standings

Functionality:
1. Quick Search Teams
2. Add/remove favourite team
3. Google map - display the game position on the map or navigate to this position.
New:
4. CRUD operations with MongoDb and Node.js 
5. User authentication (role based) with passport - local strategy + JWT(JSON Web Tokens) - register and login user



Pages(views):

Home -> Tournaments -> Tournament (listed teams about this tournament) -> Single team -> (Standings OR Game) Game -> Google map view link + navigate button

04.07.2018:

1. Created gitLab repository and initial push.

05.07.2018:

1. Created local mongodb "tournaments":
 - from cmd: mongo --shell
 - db.tournaments.insert({title: "title 1", description: "description 1"})
 - "show dbs"  - will show you all dbs with the new one
 - "use tournaments", "db.tournaments.find()" - shows all data in the "tournaments" collection
2. CRUD operations - create + read + delete tournaments - tutorial: https://www.joshmorony.com/building-a-review-app-with-ionic-2-mongodb-node/

06.07.2018:

1. CRUD operations - update tournaments
2. CRUD operations - create + read + delete + update teams
3.Created local mongodb "teams"
4. TODO: There is a bug - when go to home page from teams and click 
  tournaments, the page loads teams again, instead loading the tournaments.

08.07.2018:

1. Created local mongodb "users"
2. User authentication (role based) with passport - local strategy + JWT(JSON Web Tokens) 
- tutorial : https://www.joshmorony.com/creating-role-based-authentication-with-passport-in-ionic-2-part-1/
3. Register user with email and password (register page)
4. Login user (login page)
4. TODO: Logout and admin menu


09.07.2018:
1.Logout and admin menu

10.07.2018:
1. Moving database from local mongoDb to mLab - https://mlab.com
2. Moving the node.js app to separated Azure web app (deploying to Azure by Azure local git repozitory)
- tutorial: https://github.com/Huachao/azure-content/blob/master/articles/app-service-api/app-service-api-nodejs-api-app.md
3. How to deploy my node.js server app into Azure:
- if we have not initialized init repo:
 - git init 
 - git remote add origin <link from azure>
- if we have initialized init repo:
 - git add .
 - git commit --m "message"
 - git bush azure master


11.07.2018:
1. Moving database from mLab to Azure Cosmos DB

12.07.2018:
1. Add selectedTeams to each Tournament

13.07.2018:
1. Mongoose validation on the server: 
 - npm install --save mongoose-unique-validator
 - make the title of Tournaments and Teams unique 
 - prevent saving items and return server error (if the title isn't unique)
2. Front-end validation: 
 - handle the error from the server in the service (db.service.ts)
 - send the message the service file to the correct file (e.g. teams-demo.ts) by the Promise
 - show alert message with the correct error

 TODO: 
 - Add Loading... when it's necessary.
 - Make Tournaments clickable with internal tournament page that shows the teams

 16.07.2018:
 1. Adding confirm alert when delete item
 2. Adding Loading... messages
 3. Adding Front-End validation when register a new user and login/Logout
  - including email validation, password length, error form messages and Toast notifications